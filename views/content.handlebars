<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap" rel="stylesheet">

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">

    <title>Items</title>
    <style>
        body {
            font-family: 'Nunito', sans-serif;
            font-size: xx-large;
            background-color: #FFB6C1;
            background-size: cover;
            background-position: top center;
            background-repeat: no-repeat;
            height: 100%;
            width: 100%;
            padding: 0;
            margin: 0;
        }

        .row{
            width: 100%;
        }

        .genre-btn {
          margin-right: 2px; // Ensure there's no extra margin pushing the buttons
          flex: 1; // Stretch to fill the space
        }

        .row.align-items-center {
          min-height: 50px; // Ensure the row has a minimum height if content is less
        }


        .btn-primary {
            background-color: #FF91A4;
            border-color: #FF91A4;
            color: #FFF;
        }

        .btn-primary:hover, .btn-primary:focus, .btn-primary:active {
            background-color: #FFB6C1;
            border-color: #FFB6C1;
            color: #FFF;
        }

        .container {
            padding: 10px;
            margin-top: 20px;
        }

        h1 {
            text-align: center;
            color: #FF69B4;
        }

        table {
            display: flex;
            flex-wrap: wrap;
            border-collapse: separate;
            border-spacing: 20px;
            margin-top: 20px;
            table-layout: auto;
        }

        th, td {
            background: rgb(255, 255, 255);
            padding: 12px 8px;
            text-align: center;
            border-bottom: none;
        }

        th {
            background-color: #f2f2f2;
            font-weight: bold;
            color: #FF69B4;
        }

        td {
            color: #FF69B4;
        }

        .genre-btn {
            margin-right: 10px;
        }

        .quantity-selector {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .navbar {
            background-color: #FF1493;
        }

        .invert {
            filter: invert(1);
        }

        .page-item .page-link {
            color: #FF91A4;
        }

        .page-item .page-link:hover {
            color: #FF91A4;
        }

        .page-item.active .page-link {
            background-color: #FF91A4;
            border-color: #FF91A4;
            color: white;
        }

        #searchButton {
          background-color: #FF91A4;
          border-color: #FF91A4;
          color: #FFFFFF;
        }

        #searchButton:hover, #searchButton:focus {
          background-color: #FF69B4;
          border-color: #FF69B4;
        }

    </style>
</head>

<nav class="navbar navbar-expand-md navbar-dark sticky-top">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            <img class="invert" id="LOGO" src="../template.png" alt="LOGO" draggable="false" height="60"/>
        </a>
        <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false"
                aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse" id="navbarCollapse" style="">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">
                {{#unless loggedIn}}
                    <li class="nav-item">
                        <a class="nav-link" href="/sign_in">Log in</a>
                    </li>
                {{else}}
                    <li class="nav-item">
                        <a class="nav-link" href="/account">Profile</a>
                    </li>
                {{/unless}}
                <li class="nav-item">
                    <a class="nav-link" href="/cart">My cart</a>
                </li>
            </ul>
            <form class="d-flex" role="search">
                <input class="form-control me-2" id="searchInput" type="search" placeholder="Search"
                       aria-label="Search">
              <button class="btn btn-success" id="searchButton" type="submit">Search</button>

            </form>
        </div>
    </div>
</nav>

<div class="container-fluid m-3">
  <div class="row align-items-center"> <!-- Added align-items-center here -->
    <div class="col-10">
      <div class="d-flex justify-content-between">
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('all')">All groups</button>
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('BLACKPINK')">BLACKPINK</button>
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('BTS')">BTS</button>
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('Aespa')">Aespa</button>
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('NewJeans')">NewJeans</button>
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('TxT')">TxT</button>
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('Ateez')">Ateez</button>
        <button class="btn btn-primary genre-btn flex-grow-1" onclick="filterItems('Le Sserafim')">Le Sserafim</button>
      </div>
    </div>
    <div class="col-2 d-flex justify-content-end"> <!-- Removed align-items-center -->
      <div class="dropdown">
        <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
          Sort by:
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
          <li><a class="dropdown-item" onclick="sortItemsByPrice()">Price</a></li>
          <li><a class="dropdown-item" onclick="sortItemsByArtist()">Name</a></li>
        </ul>
      </div>
    </div>
  </div>


  <div class="row" id="items">
    </div>
    <ul class="pagination justify-content-center" id="pagination">
    </ul>
    <div class="container mt-5">
        <h1 class="text-center mb-4" style="color: #492c21">Don't miss this:</h1>
        <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <div class="row">
                        <div class="col-md-4">
                            <img src="../template.png" alt="News 1" class="img-fluid rounded">
                        </div>
                        <div class="col-md-8">
                            <div class="carousel-caption" style="color: #492c21">
                                <h3>Mid-Season Sale!</h3>
                                <p>Enjoy massive discounts on your favorite items! Don't forget to check the best deals!</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="carousel-item">
                    <div class="row">
                        <div class="col-md-4">
                            <img src="../template.png" alt="News 2" class="img-fluid rounded">
                        </div>
                        <div class="col-md-8">
                            <div class="carousel-caption" style="color: #492c21">
                                <h3>New Arrivals</h3>
                                <p>Discover the latest released items from your favorite groups. Delivered from South Korea in the shortest time possible.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="carousel-item">
                    <div class="row">
                        <div class="col-md-4">
                            <img src="../template.png" alt="News 3" class="img-fluid rounded">
                        </div>
                        <div class="col-md-8">
                            <div class="carousel-caption" style="color: #492c21">
                                <h3>Free Shipping</h3>
                                <p>Enjoy free shipping on all orders above $50. Shop now and get your favorite albums delivered to your doorstep at no extra cost.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls"
                    data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls"
                    data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>

<script>
    const itemsData = [];
    let currentData = [];

    function addToCart(itemId, quantity) {
        if (isNaN(quantity) || quantity <= 0) {
            alert('Invalid quantity. Please enter a valid number greater than 0.');
            return;
        }

        fetch('/add_to_cart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                'id': itemId,
                'count': quantity
            }),
        })
                .then(response => response.json())
                .then(response => alert(response.message))
                .catch(error => console.log(error));
    }

    function addItems(items) {
        const body = document.querySelector('#items');
        body.innerHTML = '';

        for (let i = 0; i < items.length; i++) {
            const cell = document.createElement('div');
            const item = items[i];
            cell.className = 'col-xxl-3 col-xl-4 col-lg-4 col-md-9 col-sm-12 col-xs-12 m-3';
            cell.innerHTML = `
            <div class="card text-center" style="background-color: #f4d0d6; box-shadow: rgb(146,124,147) 0px 22px 70px 4px;">
            <a href="/content/${item.id}"><img class="card-img-top p-3" src=${item.image} alt="Card image cap" style="object-fit: cover"></a>
            <div class="card-body">
                <h5 class="card-text">${item.album}</h5>
                <p class="card-text" style="font-size: 0.8em;"><strong>${item.artist}</strong></p>
                <h5 class="card-text">${item.genre}</h5>
                <div class="quantity-selector">
                    <button class="btn btn-primary" onclick="changeQuantity('quantity${item.id}', -1)">-</button>
                    <span class="mx-2" id="quantity${item.id}">1</span>
                    <button class="btn btn-primary" onclick="changeQuantity('quantity${item.id}', 1)">+</button>
                </div>
            </div>
            <div class="card-footer text-center ">
                <div class="row">
                    <div class="col-4">
                        <p class="card-text" style="font-size: 0.9em">${item.price} €</p>
                    </div>
                    <div class="col">
                        <button type="button" class="btn btn-success" style="width: 100%" id="add" onclick="addToCart('${item.id}', document.getElementById('quantity${item.id}').textContent)">Add to Cart</button>
                    </div>
                </div>
            </div>
            </div>
          `;
            body.appendChild(cell);
        }
    }

    // Initialize items on page load
    // Filter items by genre
    function filterItems(genre) {
        const filteredItems = itemsData.filter(item => genre === 'all' || item.genre.toLowerCase() === genre.toLowerCase());
        currentData = filteredItems;

        const totalPages = Math.ceil(filteredItems.length / itemsPerPage);
        generatePaginationLinks(totalPages);

        addItemsByPage(1);
    }

    function sortItemsByPrice() {
        const sortedItems = currentData.sort((a, b) => a.price - b.price);

        const totalPages = Math.ceil(sortedItems.length / itemsPerPage);
        generatePaginationLinks(totalPages);
        addItemsByPage(1);
    }

    function sortItemsByArtist() {
        const sortedItems = currentData.sort((a, b) => a.artist.localeCompare(b.artist));

        const totalPages = Math.ceil(sortedItems.length / itemsPerPage);
        generatePaginationLinks(totalPages);

        addItemsByPage(1);
    }

    // Change quantity selector value
    function changeQuantity(selectorId, change) {
        const quantityElement = document.getElementById(selectorId);
        let quantity = parseInt(quantityElement.textContent);
        if (!isNaN(quantity)) {
            quantity += change;
            if (quantity < 1) quantity = 1;
            quantityElement.textContent = quantity;
        }
    }

    function redirectToAccountPage() {
        window.location.href = '/account';
    }

    // Add an event listener to the "Profile" button
    const profileBtn = document.querySelector('a[href="/account"]');
    if (profileBtn) {
        profileBtn.addEventListener('click', redirectToAccountPage);
    }

    // Search items based on the input value
    function searchItems(inputValue) {
        const searchTerm = inputValue.trim().toLowerCase();
        const filteredItems = itemsData.filter(item =>
                item.album.toLowerCase().includes(searchTerm) ||
                item.artist.toLowerCase().includes(searchTerm) ||
                item.genre.toLowerCase().includes(searchTerm)
        );
        currentData = filteredItems;

        const totalPages = Math.ceil(filteredItems.length / itemsPerPage);
        generatePaginationLinks(totalPages);
        addItemsByPage(1);
    }

    // Add an event listener to the search form
    document.querySelector('form').addEventListener('submit', function (event) {
        event.preventDefault();
        const searchInput = document.getElementById('searchInput');
        searchItems(searchInput.value);
    });

    const itemsPerPage = 3;
    let currentPage = 1;

    // Add items based on page number
    function addItemsByPage(pageNumber) {
        const startIndex = (pageNumber - 1) * itemsPerPage;
        const endIndex = startIndex + itemsPerPage;
        const itemsToShow = currentData.slice(startIndex, endIndex);
        addItems(itemsToShow);

        currentPage = pageNumber;
        updatePaginationLinks();
    }

    // Generate the pagination links
    function generatePaginationLinks(totalPages) {
        const paginationContainer = document.getElementById('pagination');
        paginationContainer.innerHTML = '';

        // Add "Previous" button
        const prevLi = document.createElement('li');
        prevLi.classList.add('page-item');

        const prevLink = document.createElement('a');
        prevLink.classList.add('page-link');
        prevLink.textContent = 'Previous';
        prevLink.addEventListener('click', function () {
            if (currentPage > 1) {
                addItemsByPage(currentPage - 1);
            }
        });

        prevLi.appendChild(prevLink);
        paginationContainer.appendChild(prevLi);

        // Add page number buttons
        for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement('li');
            li.classList.add('page-item');

            const link = document.createElement('a');
            link.classList.add('page-link');
            link.textContent = i;
            link.addEventListener('click', function () {
                addItemsByPage(i);
            });

            if (i === currentPage) {
                li.classList.add('active'); // Highlight the current page
            }

            li.appendChild(link);
            paginationContainer.appendChild(li);
        }

        // Add "Next" button
        const nextLi = document.createElement('li');
        nextLi.classList.add('page-item');

        const nextLink = document.createElement('a');
        nextLink.classList.add('page-link');
        nextLink.textContent = 'Next';
        nextLink.addEventListener('click', function () {
            if (currentPage < totalPages) {
                addItemsByPage(currentPage + 1);
            }
        });

        nextLi.appendChild(nextLink);
        paginationContainer.appendChild(nextLi);
    }

    // Update the pagination links to highlight the current page
    function updatePaginationLinks() {
        const paginationLinks = document.querySelectorAll('#pagination li');

        paginationLinks.forEach((link, index) => {
            if (index === currentPage) {
                link.classList.add('active');
            } else {
                link.classList.remove('active');
            }
        });
    }

    // Fetch data from the server API
    fetch('/api/items')
            .then(response => response.json())
            .then(data => {
                itemsData.push(...data);
                filterItems('all'); // Start by showing all items
            })
            .catch(error => console.log(error));

</script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"
        integrity="sha384-fbbOQedDUMZZ5KreZpsbe1LCZPVmfTnH7ois6mU1QK+m14rQ1l2bGBq41eYeM/fS"
        crossorigin="anonymous"></script>
</body>

</html>
