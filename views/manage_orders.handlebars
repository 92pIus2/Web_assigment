<!DOCTYPE html>
<html>
<head>

    <meta charset="UTF-8">
    <title>Табличка с использованием Bootstrap</title>
    <!-- Подключение Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <style>
        body {
            background-color: #e9dfb1;
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #e0cca8;
        }

        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #e0cca8;
        }

        tbody tr:hover {
            background-color: #d3c19e;
        }

        table table {
            width: 100%;
            border-collapse: collapse;
        }

        table table th, table table td {
            padding: 8px;
            text-align: left;
        }

        table table th {
            background-color: #e0cca8;
        }
    </style>
</head>
<body>
<div>
    <h2>Pending orders</h2>
    <table>
        <thead>
        <tr>
            <th>ID</th>
            <th>Total</th>
            <th>Email</th>
            <th>Products</th>
        </tr>
        </thead>
        <tbody id="ordersTable">
        <!-- Order details will be updated dynamically here -->
        </tbody>
    </table>
</div>
<script>
    getOrders();

    function proceedOrder(orderId) {
        fetch('/api/proceed_order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({order_id: orderId})
        }).then(response => {
            if (response.ok) {
                window.location.reload();
            } else {
                console.error('Failed to proceed order.');
            }
        }).catch(error => {
            console.error('Error proceeding order:', error);
            alert('An error occurred while proceeding order.');
        });
    }

    function getOrders() {
        fetch('/get_orders_in_progress')
                .then(response => response.json())
                .then(data => {
                    const orderHistoryTable = document.getElementById('ordersTable');
                    orderHistoryTable.innerHTML = ''; // Clear any placeholder content

                    data.forEach(order => {
                        const orderRow = document.createElement('tr');
                        orderRow.innerHTML = `
                        <td>${order.order_id}</td>
                        <td>${order.total} €</td>
                        <td>${order.email}</td>
                        <td>
                            <table>
                                <thead>
                                <tr>
                                    <th>Artist</th>
                                    <th>Album</th>
                                    <th>Count</th>
                                    <th>Price</th>
                                </tr>
                                </thead>
                                <tbody>
                                ${order.products.map(product => `
                                    <tr>
                                        <td>${product.artist}</td>
                                        <td>${product.album}</td>
                                        <td>${product.count}</td>
                                        <td>${product.price} €</td>
                                    </tr>
                                `).join('')}
                                </tbody>
                            </table>
                        </td>
                        <td>
                            <button type="button" class="btn btn-success float-end" style="width: 100%" onclick="proceedOrder(${order.order_id})">Proceed</button>
                        </td>
                    `;
                        orderHistoryTable.appendChild(orderRow);
                    });
                })
                .catch(error => {
                    console.error('Error fetching order history:', error);
                    alert('An error occurred while fetching order history.');
                });
    }

    // JavaScript для генерации случайного числа и отображения его в надписи "итого:"
    // Для каждой таблички создадим отдельное случайное число и отобразим его в соответствующей надписи.
    const total1Element = document.getElementById("total1");
    const total2Element = document.getElementById("total2");

    const total1Value = Math.floor(Math.random() * 100); // Случайное число от 0 до 99 для первой таблички
    const total2Value = Math.floor(Math.random() * 100); // Случайное число от 0 до 99 для второй таблички

    total1Element.textContent = "$" + total1Value;
    total2Element.textContent = "$" + total2Value;
</script>


<!-- Подключение Bootstrap JS и зависимостей jQuery (необходимо для некоторых Bootstrap компонентов) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>
</html>
