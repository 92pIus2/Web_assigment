<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Account</title>
    <!-- ... (include CSS and other necessary scripts) ... -->
</head>

<body>
<h1>User Account Page</h1>
<div>
    <!-- Displayed user information will be updated dynamically -->
    <h2>User Information</h2>
    <p>Username: <span id="usernamePlaceholder"></span></p>
    <p>Email: <span id="emailPlaceholder"></span></p>
</div>
<div>
    <!-- Order History in Table Format -->
    <h2>Order History</h2>
    <table>
        <thead>
        <tr>
            <th>Order ID</th>
            <th>Status</th>
            <th>Total</th>
            <th>Products</th>
        </tr>
        </thead>
        <tbody id="orderHistoryTable">
        <!-- Order details will be updated dynamically here -->
        </tbody>
    </table>
</div>
<div>
    <!-- Update account details form -->
    <h2>Update Account Details</h2>
    <form id="updateForm">
        <label for="newUsername">Username:</label>
        <input type="text" id="newUsername" name="newUsername" required>

        <label for="newPassword">Password:</label>
        <input type="password" id="newPassword" name="newPassword" required>

        <button type="submit">Update</button>
    </form>
</div>
<script>
    document.getElementById('usernamePlaceholder').textContent = '{{username}}'; // Set initial username value
    getUserEmail();
    getOrderHistory();

    // Update account details form submission
    document.getElementById('updateForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const newUsername = document.getElementById('newUsername').value;
        const newPassword = document.getElementById('newPassword').value;

        // Assuming you have a variable "username" containing the currently logged-in username
        const username = '{{username}}'; // Replace this with the currently logged-in username

        // Call the function to update user data
        updateUserData(username, newUsername, newPassword);
    });

    function getUserEmail() {
        fetch('/get_user_email')
                .then(response => response.json())
                .then(data => {
                    if (!data.email) {
                        // If email is empty, set a default placeholder
                        document.getElementById('emailPlaceholder').textContent = 'Email not available';
                    } else {
                        // If email is available, update the displayed email on the page
                        document.getElementById('emailPlaceholder').textContent = data.email;
                    }
                })
                .catch(error => {
                    console.error('Error fetching user email:', error);
                    alert('An error occurred while fetching user email.');
                });
    }

    function getOrderHistory() {
        fetch('/get_user_orders') // Replace with the actual API endpoint to get user orders
                .then(response => response.json())
                .then(data => {
                    const orderHistoryTable = document.getElementById('orderHistoryTable');
                    orderHistoryTable.innerHTML = ''; // Clear any placeholder content

                    data.forEach(order => {
                        const orderRow = document.createElement('tr');
                        orderRow.innerHTML = `
                        <td>${order.order_id}</td>
                        <td>${order.status}</td>
                        <td>$${order.total}</td>
                        <td>
                            <table>
                                <thead>
                                <tr>
                                    <th>Artist</th>
                                    <th>Album</th>
                                    <th>Count</th>
                                    <th>Price</th>
                                </tr>
                                </thead>
                                <tbody>
                                ${order.products.map(product => `
                                    <tr>
                                        <td>${product.artist}</td>
                                        <td>${product.album}</td>
                                        <td>${product.count}</td>
                                        <td>$${product.price}</td>
                                    </tr>
                                `).join('')}
                                </tbody>
                            </table>
                        </td>
                    `;
                        orderHistoryTable.appendChild(orderRow);
                    });
                })
                .catch(error => {
                    console.error('Error fetching order history:', error);
                    alert('An error occurred while fetching order history.');
                });
    }

    // Function to update user data
    function updateUserData(username, newUsername, newPassword) {
        // Send a request to the server to update user data
        fetch(`/update_user_by_username`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username,
                newUsername,
                newPassword
            }),
        })
        document.getElementById('usernamePlaceholder').textContent = newUsername;
    }
</script>

</body>

</html>
